# 负载均衡示例
http {
    # backend 为名称
    upsream backend {
        # 不加时为循环
        # 最少连接均衡方法
        least_conn;
        #  会保持会话持久性；固定ip到固定服务
        ip_hash；
        # 分配给响应时间最短的
        fair;

        # weight 权重均衡
        # web服务地址
        server 127.0.0.1 weight 4;
        # 健康检查  max_fails默认是1，为零时不检查，是fail_timeout时间内检查次数;失败后，停止fail_timeout时间再试一下，失败则循环(单次检测);fail_timeout默认是 10s
        server 127.0.0.2 max_fails=3 fail_timeout=30s;
        server 127.0.0.3;
    }

    server {
        listen 80;

        # 拦截与访问
        location / {
            root   /usr/share/nginx/html;
            index index.html index.htm;
            deny  192.168.1.100;
            allow 192.168.1.10/200;
            allow 10.110.50.16;
            deny  all;
        }

        location /api {
            proxy_pass http://backend;
        }
    }
}


server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

